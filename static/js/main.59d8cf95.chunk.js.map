{"version":3,"sources":["components/form/ExpensesForm.jsx","components/modal/DeleteModal.jsx","components/modal/EditModal.jsx","components/item/ExpenseItem.jsx","components/list/ExpensesList.jsx","components/message/AlertNotifications.jsx","App.js","serviceWorker.js","index.js"],"names":["ExpensesForm","charge","amount","handleChargeInputChange","handleAmountInputChange","handleSubmit","isEditActive","onSubmit","className","type","id","name","value","onChange","DeleteModal","setIsDeleteModalOpen","isDeleteModalOpen","handleClickDelete","onClick","EditModal","setIsEditModalOpen","isEditModalOpen","handleClickEdit","handleCloseEditModal","ExpenseItem","expense","useState","ExpenseList","expenses","clearItems","map","key","length","Alert","text","App","setIsEditOpen","initialExpenses","localStorage","getItem","JSON","parse","setExpenses","setCharge","setAmount","show","isAlertActive","setIsAlertActive","setIsEditActive","setId","useEffect","setItem","stringify","handleClickAlert","setTimeout","e","preventDefault","allExpenses","item","singleExpense","Date","getTime","target","parseInt","find","filter","reduce","old","curr","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.59d8cf95.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ExpensesForm = ({\r\n  charge,\r\n  amount,\r\n  handleChargeInputChange,\r\n  handleAmountInputChange,\r\n  handleSubmit,\r\n  isEditActive\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"container is-fluid\">\r\n        <div className=\"columns\">\r\n          <div className=\"level\">\r\n            <div className=\"column\">\r\n              <div className=\"level-left\">\r\n                <div className=\"level-item\">\r\n                  <div className=\"field\">\r\n                    <div className=\"control\">\r\n                      <label className=\"label\">Item</label>\r\n                      <input\r\n                        className=\"input-field\"\r\n                        type=\"text\"\r\n                        id=\"charge\"\r\n                        name=\"charge\"\r\n                        value={charge}\r\n                        onChange={handleChargeInputChange}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"level\">\r\n              <div className=\"level-item\"></div>\r\n            </div>\r\n            <div className=\"column\">\r\n              <div className=\"level-right\">\r\n                <div className=\"level-item\">\r\n                  <div className=\"field\">\r\n                    <label className=\"label\">Amount</label>\r\n                    <input\r\n                      className=\"input-field\"\r\n                      type=\"number\"\r\n                      id=\"amount\"\r\n                      name=\"amount\"\r\n                      value={amount}\r\n                      onChange={handleAmountInputChange}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"column\">\r\n          <div className=\"container\">\r\n            <div className=\"level\">\r\n              <button\r\n                className=\"button is-success is-rounded is-fullwidth\"\r\n                type=\"submit\"\r\n              >\r\n                {isEditActive ? \"Save Changes\" : \"Submit\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpensesForm;\r\n","import React from \"react\";\r\n\r\nconst DeleteModal = ({\r\n  id,\r\n  setIsDeleteModalOpen,\r\n  isDeleteModalOpen,\r\n  handleClickDelete\r\n}) => {\r\n  const handleCloseDeleteModal = () => {\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={`modal ${isDeleteModalOpen ? \"is-active\" : \"\"}`}>\r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"columns is-mobile is-tablet is-desktop is-centered\">\r\n          <div className=\"modal-card\">\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-card-title has-text-white has-text-centered\">\r\n                Delete Budget Expense\r\n              </div>\r\n              <button\r\n                className=\"modal-close is-large\"\r\n                onClick={handleCloseDeleteModal}\r\n              ></button>\r\n            </div>\r\n            <section className=\"modal-body has-text-white has-text-centered\">\r\n              Are you sure you want to delete this?\r\n            </section>\r\n            <div className=\"modal-footer\">\r\n              <div className=\"column\">\r\n                <div className=\"level\">\r\n                  <div className=\"level-item\">\r\n                    <button\r\n                      className=\"button is-white has-text-black\"\r\n                      onClick={() => handleClickDelete(id)}\r\n                    >\r\n                      Yes\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\n\r\nconst EditModal = ({\r\n  id,\r\n  setIsEditModalOpen,\r\n  isEditModalOpen,\r\n  handleClickEdit\r\n}) => {\r\n  const handleCloseEditModal = () => {\r\n    setIsEditModalOpen(false);\r\n  };\r\n  return (\r\n    <div className={`modal ${isEditModalOpen ? \"is-active\" : \"\"}`}>\r\n      <div className=\"modal-background\"></div>\r\n      <div className=\"columns is-mobile is-tablet is-desktop\">\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-header\">\r\n            <p className=\"modal-card-title has-text-centered has-text-white\">\r\n              Edit Modal\r\n            </p>\r\n          </header>\r\n          <section className=\"modal-body\">\r\n            <div className=\"field has-text-centered\">\r\n              <label className=\"subtitle is-6 has-text-centered has-text-white\">\r\n                Are you sure you want to edit this?\r\n              </label>\r\n            </div>\r\n          </section>\r\n          <footer className=\"modal-footer\">\r\n            <div className=\"container\">\r\n              <div className=\"level\">\r\n                <div className=\"level-item\">\r\n                  <div className=\"buttons\">\r\n                    <div\r\n                      className=\"button\"\r\n                      onClick={() => {\r\n                        handleClickEdit(id);\r\n                        handleCloseEditModal();\r\n                      }}\r\n                    >\r\n                      Yes\r\n                    </div>\r\n                    <div className=\"button\" onClick={handleCloseEditModal}>\r\n                      No\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n","import React, { useState } from \"react\";\r\nimport DeleteModal from \"../modal/DeleteModal\";\r\nimport EditModal from \"../modal/EditModal\";\r\n\r\nconst ExpenseItem = ({\r\n  expense: { id, charge, amount },\r\n  handleClickDelete,\r\n  handleClickEdit\r\n}) => {\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n\r\n  const handleOpenDeleteModal = () => {\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleOpenEditModal = () => {\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"level is-mobile\">\r\n        <div className=\"level-left\">\r\n          <div className=\"list-item\">\r\n            <label className=\"text\">{charge}</label>\r\n            <label>P {amount}</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"level-right\">\r\n          <div className=\"list-item\">\r\n            <div className=\"buttons\">\r\n              <button\r\n                className=\"button is-info\"\r\n                // onClick={() => handleClickEdit(id)}\r\n                onClick={handleOpenEditModal}\r\n              >\r\n                <span className=\"icons\">\r\n                  <i className=\"fas fa-pen\"></i>\r\n                </span>\r\n              </button>\r\n              <button\r\n                className=\"button is-danger\"\r\n                // onClick={() => handleClickDelete(id)}\r\n                onClick={handleOpenDeleteModal}\r\n              >\r\n                <span className=\"icons\">\r\n                  <i className=\"fas fa-trash\"></i>\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <DeleteModal\r\n        setIsDeleteModalOpen={setIsDeleteModalOpen}\r\n        isDeleteModalOpen={isDeleteModalOpen}\r\n        handleClickDelete={handleClickDelete}\r\n        id={id}\r\n      />\r\n      <EditModal\r\n        setIsEditModalOpen={setIsEditModalOpen}\r\n        isEditModalOpen={isEditModalOpen}\r\n        handleClickEdit={handleClickEdit}\r\n        id={id}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport ExpenseItem from \"../item/ExpenseItem\";\r\n\r\nconst ExpenseList = ({\r\n  expenses,\r\n  handleClickDelete,\r\n  handleClickEdit,\r\n  clearItems\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"level is-block\">\r\n        <div className=\"level is-mobile is-tablet is-desktop\">\r\n          <div className=\"level-item\">\r\n            <div className=\"column\">\r\n              {expenses.map(expense => {\r\n                return (\r\n                  <ExpenseItem\r\n                    key={expense.id}\r\n                    expense={expense}\r\n                    handleClickEdit={handleClickEdit}\r\n                    handleClickDelete={handleClickDelete}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {expenses.length > 0 && (\r\n          <div className=\"column\">\r\n            <button className=\"button is-black is-fullwidth\" onClick={clearItems}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\n\r\nconst Alert = ({ type, text }) => {\r\n  return <div className={`alert alert-${type}`}>{text}</div>;\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\n\nimport ExpenseForm from \"./components/form/ExpensesForm\";\nimport ExpenseList from \"./components/list/ExpensesList\";\nimport Alert from \"./components/message/AlertNotifications\";\n\nconst App = ({ setIsDeleteModalOpen, setIsEditOpen }) => {\n  const initialExpenses = localStorage.getItem(\"expenses\")\n    ? JSON.parse(localStorage.getItem(\"expenses\"))\n    : [];\n\n  const [expenses, setExpenses] = useState(initialExpenses);\n  const [charge, setCharge] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [isAlertActive, setIsAlertActive] = useState({ show: false });\n  const [isEditActive, setIsEditActive] = useState(false);\n  const [id, setId] = useState(0);\n\n  useEffect(() => {\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  }, [expenses]);\n\n  const handleChargeInputChange = e => {\n    setCharge(e.target.value);\n  };\n\n  const handleAmountInputChange = e => {\n    let amount = e.target.value;\n    if (amount === \"\") {\n      setAmount(amount);\n    } else {\n      setAmount(parseInt(amount));\n    }\n  };\n\n  const handleClickAlert = ({ type, text }) => {\n    setIsAlertActive({ show: true, type, text });\n    setTimeout(() => {\n      setIsAlertActive({ show: false });\n    }, 5000);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (charge !== \"\" && amount > 0) {\n      if (isEditActive) {\n        let allExpenses = expenses.map(item => {\n          return item.id === id ? { ...item, charge, amount } : item;\n        });\n        setExpenses(allExpenses);\n        setIsEditActive(false);\n      } else {\n        const singleExpense = { id: new Date().getTime(), charge, amount };\n        setExpenses([...expenses, singleExpense]);\n        handleClickAlert({ type: \"success\", text: \"Item was added!\" });\n      }\n      setCharge(\"\");\n      setAmount(\"\");\n    } else {\n      handleClickAlert({\n        type: \"danger\",\n        text: `Don't leave the field empty`\n      });\n    }\n  };\n\n  const handleClickDelete = id => {\n    let allExpenses = expenses.filter(item => item.id !== id);\n    setExpenses(allExpenses);\n    setIsDeleteModalOpen = { setIsDeleteModalOpen };\n    handleClickAlert({ type: \"danger\", text: \"Item was deleted\" });\n  };\n\n  const clearItems = () => {\n    setExpenses([]);\n  };\n\n  const handleClickEdit = id => {\n    let expense = expenses.find(item => item.id === id);\n    let { charge, amount } = expense;\n    setIsEditOpen = { setIsEditOpen };\n    setCharge(charge);\n    setAmount(amount);\n    setIsEditActive(true);\n    setId(id);\n  };\n  return (\n    <div>\n      {isAlertActive.show && (\n        <Alert type={isAlertActive.type} text={isAlertActive.text} />\n      )}\n      <div className=\"square column\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <ExpenseForm\n                handleSubmit={handleSubmit}\n                charge={charge}\n                amount={amount}\n                isEditActive={isEditActive}\n                handleChargeInputChange={handleChargeInputChange}\n                handleAmountInputChange={handleAmountInputChange}\n              />\n            </div>\n          </div>\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <ExpenseList\n                expenses={expenses}\n                handleClickEdit={handleClickEdit}\n                handleClickDelete={handleClickDelete}\n                clearItems={clearItems}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-container\">\n          <div className=\"box\">\n            <div className=\"level\">\n              <div className=\"level-item\">\n                <label className=\"title is-5\">Total Expense:</label>\n                <label className=\"footer-text\">Php</label>\n                {expenses.reduce((old, curr) => {\n                  return (old += curr.amount);\n                }, 0)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bulma/css/bulma.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}